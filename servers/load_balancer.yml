Description:
  Written by DaEun Kim.
  This template deploys a load balancer targeting instances in public subnets.

Parameters:
  EnvironmentName:
    Description: An environment name which will be prefixed to resource names
    Type: String


Resources:
  LBforWebApp:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PUB1-SN
        - Fn::ImportValue: !Sub ${EnvironmentName}-PUB2-SN

  TargetGroupforWebApp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 35
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 30
      # if load balancer requests 2 times to target and it returns OK 2 times, it is considered healthy.
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      # if load balancer requests 5 times to target and it returns Internal Server Error or does not respond,
      # it is considered unhealthy.
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID

  LBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LBforWebApp

      Port: 80
      Protocol: HTTP

      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupforWebApp

  LBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupforWebApp

      Conditions:
        - Field: path-pattern
          Values: [/]

      ListenerArn: !Ref LBListener
      Priority: 1
