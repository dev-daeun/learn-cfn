Description:
  Written by DaEun Kim.

  This template deploys
    * a VPC with 2 public subnets and 2 private subnets spread across 2 Availability Zones.
    * an Internet Gateway routing on the public subnets by default.
    * a pair of NAT Gateways (one on each AZ).
    * a router for private subnets.

# Don't hard-code resource value in CloudFormation script or you could break already tested script.
# Make parameters and give them to this script.
Parameters:
  EnvironmentName:
    Description: An environment name which will be prefixed to resource names
    Type: String

  VpcCIDR:
    Description: IP range (CIDR notation) for VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: CIDR block for public subnet 1 in the first AZ
    Type: String
    Default: 10.0.0.0/24

  PublicSubnet2CIDR:
    Description: CIDR block for public subnet 2 in the second AZ
    Type: String
    Default: 10.0.1.0/24

  PrivateSubnet1CIDR:
    Description: CIDR block for private subnet 1 in the first AZ
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet2CIDR:
    Description: CIDR block for private subnet 2 in the second AZ
    Type: String
    Default: 10.0.3.0/24




Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayForPublicSubnets:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGatewayForPublicSubnets
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '']  # select first AZ in region. (0-index based)
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ] # select second AZ in region. (0-index based)
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
     VpcId: !Ref VPC
     AvailabilityZone: !Select [ 1, !GetAZs '' ]
     CidrBlock: !Ref PrivateSubnet2CIDR
     MapPublicIpOnLaunch: false
     Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
